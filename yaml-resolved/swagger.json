---
swagger: "2.0"
info:
  description: |
    Basic Auth server which validates user credentials and provides an access token
  version: 1.0.0
  title: Auth Server
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /Beans/auth-server/1.0.0
tags:
- name: Auth
  description: Login and validate user credentials
- name: Health
  description: Health check endpoints
schemes:
- https
paths:
  /login:
    post:
      tags:
      - Auth
      summary: Login to the auth server
      operationId: login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Username and Password combination for login
        required: true
        schema:
          $ref: '#/definitions/loginRequest'
      responses:
        200:
          description: Login successful
          schema:
            $ref: '#/definitions/tokenValues'
        401:
          description: Invalid login credentials. The credentials could be wrong, or non-existant.
        500:
          description: Server error. Backend communication, or hash failures.
  /isValid:
    post:
      tags:
      - Auth
      summary: Validate provided login credentials.
      operationId: isValid
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: Token values to check for validation
        required: true
        schema:
          $ref: '#/definitions/tokenValues'
      responses:
        200:
          description: Ok
        401:
          description: Invalid login credentials. The credentials could be wrong, or non-existant.
  /health:
    get:
      tags:
      - Health
      summary: Basic healthcheck endpoint
      parameters: []
      responses:
        200:
          description: Ok
  /ping:
    post:
      tags:
      - Health
      summary: Basic healthcheck endpoint
      parameters: []
      responses:
        200:
          description: Ok
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  loginRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  tokenValues:
    type: object
    properties:
      playerId:
        type: string
        format: uuid
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
